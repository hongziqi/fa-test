#loc = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":156:0)
#loc1 = loc(unknown)
#loc27 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":251:82)
#loc33 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":93:46)
#loc42 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":108:25)
#loc71 = loc(callsite(#loc1 at #loc33))
#loc80 = loc(callsite(#loc1 at #loc42))
#loc93 = loc(callsite(#loc71 at #loc27))
#loc96 = loc(callsite(#loc80 at #loc27))
module {
  tt.func public @_attn_fwd(%arg0: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":156:0), %arg1: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":156:0), %arg2: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":156:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":156:0), %arg4: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":156:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":156:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1.000000e+00> : tensor<64xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0xFF800000> : tensor<64xf32> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<64x64xf32> loc(#loc1)
    %cst_2 = arith.constant dense<5.000000e-01> : tensor<64x64xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<64x128xf32> loc(#loc1)
    %c20_i32 = arith.constant 20 : i32 loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %c1_i64 = arith.constant 1 : i64 loc(#loc1)
    %c128_i64 = arith.constant 128 : i64 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c16384_i64 = arith.constant 16384 : i64 loc(#loc1)
    %c524288_i64 = arith.constant 524288 : i64 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc2)
    %0 = tt.get_program_id x : i32 loc(#loc3)
    %1 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    scf.for %arg6 = %0 to %c256_i32 step %c20_i32  : i32 {
      %2 = arith.divsi %arg6, %c2_i32 : i32 loc(#loc6)
      %3 = arith.remsi %arg6, %c2_i32 : i32 loc(#loc7)
      %4 = arith.divsi %2, %c32_i32 : i32 loc(#loc8)
      %5 = arith.remsi %2, %c32_i32 : i32 loc(#loc9)
      %6 = arith.extsi %4 : i32 to i64 loc(#loc10)
      %7 = arith.muli %6, %c524288_i64 : i64 loc(#loc11)
      %8 = arith.extsi %5 : i32 to i64 loc(#loc12)
      %9 = arith.muli %8, %c16384_i64 : i64 loc(#loc13)
      %10 = arith.addi %7, %9 : i64 loc(#loc14)
      %11 = tt.addptr %arg0, %10 : !tt.ptr<f16>, i64 loc(#loc15)
      %12 = arith.muli %3, %c64_i32 : i32 loc(#loc16)
      %13 = tt.make_tensor_ptr %11, [%c128_i64, %c128_i64], [%c128_i64, %c1_i64], [%12, %c0_i32] {order = array<i32: 1, 0>} : <tensor<64x128xf16>> loc(#loc17)
      %14 = tt.addptr %arg2, %10 : !tt.ptr<f16>, i64 loc(#loc18)
      %15 = tt.make_tensor_ptr %14, [%c128_i64, %c128_i64], [%c128_i64, %c1_i64], [%c0_i32, %c0_i32] {order = array<i32: 1, 0>} : <tensor<64x128xf16>> loc(#loc19)
      %16 = tt.addptr %arg1, %10 : !tt.ptr<f16>, i64 loc(#loc20)
      %17 = tt.make_tensor_ptr %16, [%c128_i64, %c128_i64], [%c128_i64, %c1_i64], [%c0_i32, %c0_i32] {order = array<i32: 1, 0>} : <tensor<64x128xf16>> loc(#loc21)
      %18 = tt.addptr %arg4, %10 : !tt.ptr<f16>, i64 loc(#loc22)
      %19 = tt.make_tensor_ptr %18, [%c128_i64, %c128_i64], [%c128_i64, %c1_i64], [%12, %c0_i32] {order = array<i32: 1, 0>} : <tensor<64x128xf16>> loc(#loc23)
      %20 = tt.splat %12 : i32 -> tensor<64xi32> loc(#loc24)
      %21 = arith.addi %20, %1 : tensor<64xi32> loc(#loc24)
      %22 = tt.load %13 : !tt.ptr<tensor<64x128xf16>> loc(#loc25)
      %23:5 = scf.for %arg7 = %c0_i32 to %c128_i32 step %c64_i32 iter_args(%arg8 = %cst, %arg9 = %cst_3, %arg10 = %cst_0, %arg11 = %15, %arg12 = %17) -> (tensor<64xf32>, tensor<64x128xf32>, tensor<64xf32>, !tt.ptr<tensor<64x128xf16>>, !tt.ptr<tensor<64x128xf16>>)  : i32 {
        %34 = tt.load %arg12 : !tt.ptr<tensor<64x128xf16>> loc(#loc66)
        %35 = tt.trans %34 {order = array<i32: 1, 0>} : tensor<64x128xf16> -> tensor<128x64xf16> loc(#loc67)
        %36 = tt.dot %22, %35, %cst_1 : tensor<64x128xf16> * tensor<128x64xf16> -> tensor<64x64xf32> loc(#loc68)
        %37 = arith.mulf %36, %cst_2 : tensor<64x64xf32> loc(#loc69)
        %38 = "tt.reduce"(%37) <{axis = 1 : i32}> ({
        ^bb0(%arg13: f32 loc(callsite(#loc71 at #loc27)), %arg14: f32 loc(callsite(#loc71 at #loc27))):
          %57 = arith.maxnumf %arg13, %arg14 : f32 loc(#loc98)
          tt.reduce.return %57 : f32 loc(#loc92)
        }) : (tensor<64x64xf32>) -> tensor<64xf32> loc(#loc92)
        %39 = arith.maxnumf %arg10, %38 : tensor<64xf32> loc(#loc73)
        %40 = tt.expand_dims %39 {axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc74)
        %41 = tt.broadcast %40 : tensor<64x1xf32> -> tensor<64x64xf32> loc(#loc75)
        %42 = arith.subf %37, %41 : tensor<64x64xf32> loc(#loc75)
        %43 = math.exp %42 : tensor<64x64xf32> loc(#loc76)
        %44 = arith.truncf %43 : tensor<64x64xf32> to tensor<64x64xf16> loc(#loc77)
        %45 = tt.load %arg11 : !tt.ptr<tensor<64x128xf16>> loc(#loc78)
        %46 = "tt.reduce"(%43) <{axis = 1 : i32}> ({
        ^bb0(%arg13: f32 loc(callsite(#loc80 at #loc27)), %arg14: f32 loc(callsite(#loc80 at #loc27))):
          %57 = arith.addf %arg13, %arg14 : f32 loc(#loc99)
          tt.reduce.return %57 : f32 loc(#loc95)
        }) : (tensor<64x64xf32>) -> tensor<64xf32> loc(#loc95)
        %47 = arith.subf %arg10, %39 : tensor<64xf32> loc(#loc82)
        %48 = math.exp %47 : tensor<64xf32> loc(#loc83)
        %49 = arith.mulf %arg8, %48 : tensor<64xf32> loc(#loc84)
        %50 = arith.addf %49, %46 : tensor<64xf32> loc(#loc85)
        %51 = tt.expand_dims %48 {axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc86)
        %52 = tt.broadcast %51 : tensor<64x1xf32> -> tensor<64x128xf32> loc(#loc87)
        %53 = arith.mulf %arg9, %52 : tensor<64x128xf32> loc(#loc87)
        %54 = tt.dot %44, %45, %53 : tensor<64x64xf16> * tensor<64x128xf16> -> tensor<64x128xf32> loc(#loc88)
        %55 = tt.advance %arg11, [%c64_i32, %c0_i32] : <tensor<64x128xf16>> loc(#loc89)
        %56 = tt.advance %arg12, [%c64_i32, %c0_i32] : <tensor<64x128xf16>> loc(#loc90)
        scf.yield %50, %54, %39, %55, %56 : tensor<64xf32>, tensor<64x128xf32>, tensor<64xf32>, !tt.ptr<tensor<64x128xf16>>, !tt.ptr<tensor<64x128xf16>> loc(#loc91)
      } {tt.divisibility_arg1 = dense<64> : tensor<1xi32>} loc(#loc65)
      %24 = math.log %23#0 : tensor<64xf32> loc(#loc54)
      %25 = arith.addf %23#2, %24 : tensor<64xf32> loc(#loc55)
      %26 = tt.expand_dims %23#0 {axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc56)
      %27 = tt.broadcast %26 : tensor<64x1xf32> -> tensor<64x128xf32> loc(#loc57)
      %28 = arith.divf %23#1, %27 : tensor<64x128xf32> loc(#loc57)
      %29 = arith.muli %2, %c128_i32 : i32 loc(#loc58)
      %30 = tt.addptr %arg3, %29 : !tt.ptr<f32>, i32 loc(#loc59)
      %31 = tt.splat %30 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc60)
      %32 = tt.addptr %31, %21 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc60)
      tt.store %32, %25 : tensor<64x!tt.ptr<f32>> loc(#loc61)
      %33 = arith.truncf %28 : tensor<64x128xf32> to tensor<64x128xf16> loc(#loc62)
      tt.store %19, %33 : !tt.ptr<tensor<64x128xf16>> loc(#loc63)
    } loc(#loc5)
    tt.return loc(#loc64)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":169:19)
#loc3 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":173:24)
#loc4 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":225:53)
#loc5 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":179:44)
#loc6 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":180:35)
#loc7 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":181:33)
#loc8 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":182:31)
#loc9 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":183:30)
#loc10 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":184:30)
#loc11 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":184:42)
#loc12 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":184:63)
#loc13 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":184:75)
#loc14 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":184:54)
#loc15 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":186:21)
#loc16 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":191:34)
#loc17 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":195:12)
#loc18 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":198:21)
#loc19 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":206:12)
#loc20 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":209:21)
#loc21 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":214:12)
#loc22 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":217:23)
#loc23 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":222:12)
#loc24 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":225:40)
#loc25 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":242:20)
#loc26 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":76:33)
#loc28 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":79:20)
#loc29 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":82:27)
#loc30 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":83:23)
#loc31 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":92:22)
#loc32 = loc("/home/coder/miniconda/envs/triton/lib/python3.10/site-packages/triton/language/standard.py":184:40)
#loc34 = loc("/home/coder/miniconda/envs/triton/lib/python3.10/site-packages/triton/language/standard.py":163:27)
#loc35 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":93:35)
#loc36 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":94:27)
#loc37 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":94:22)
#loc38 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":97:24)
#loc39 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":104:26)
#loc40 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":105:20)
#loc41 = loc("/home/coder/miniconda/envs/triton/lib/python3.10/site-packages/triton/language/standard.py":267:36)
#loc43 = loc("/home/coder/miniconda/envs/triton/lib/python3.10/site-packages/triton/language/standard.py":256:15)
#loc44 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":110:34)
#loc45 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":110:28)
#loc46 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":112:20)
#loc47 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":112:28)
#loc48 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":115:38)
#loc49 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":115:32)
#loc50 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":116:40)
#loc51 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":150:46)
#loc52 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":151:46)
#loc53 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":151:8)
#loc54 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":265:27)
#loc55 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":265:15)
#loc56 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":267:40)
#loc57 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":267:36)
#loc58 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":275:35)
#loc59 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":275:21)
#loc60 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":275:43)
#loc61 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":277:25)
#loc62 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":278:45)
#loc63 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":278:30)
#loc64 = loc("/home/coder/workspace/fa-test/npu/test_fa_fwd_npu_ac.py":179:4)
#loc65 = loc(callsite(#loc26 at #loc27))
#loc66 = loc(callsite(#loc28 at #loc27))
#loc67 = loc(callsite(#loc29 at #loc27))
#loc68 = loc(callsite(#loc30 at #loc27))
#loc69 = loc(callsite(#loc31 at #loc27))
#loc70 = loc(callsite(#loc32 at #loc33))
#loc72 = loc(callsite(#loc34 at #loc32))
#loc73 = loc(callsite(#loc35 at #loc27))
#loc74 = loc(callsite(#loc36 at #loc27))
#loc75 = loc(callsite(#loc37 at #loc27))
#loc76 = loc(callsite(#loc38 at #loc27))
#loc77 = loc(callsite(#loc39 at #loc27))
#loc78 = loc(callsite(#loc40 at #loc27))
#loc79 = loc(callsite(#loc41 at #loc42))
#loc81 = loc(callsite(#loc43 at #loc41))
#loc82 = loc(callsite(#loc44 at #loc27))
#loc83 = loc(callsite(#loc45 at #loc27))
#loc84 = loc(callsite(#loc46 at #loc27))
#loc85 = loc(callsite(#loc47 at #loc27))
#loc86 = loc(callsite(#loc48 at #loc27))
#loc87 = loc(callsite(#loc49 at #loc27))
#loc88 = loc(callsite(#loc50 at #loc27))
#loc89 = loc(callsite(#loc51 at #loc27))
#loc90 = loc(callsite(#loc52 at #loc27))
#loc91 = loc(callsite(#loc53 at #loc27))
#loc92 = loc(callsite(#loc70 at #loc27))
#loc94 = loc(callsite(#loc72 at #loc33))
#loc95 = loc(callsite(#loc79 at #loc27))
#loc97 = loc(callsite(#loc81 at #loc42))
#loc98 = loc(callsite(#loc94 at #loc27))
#loc99 = loc(callsite(#loc97 at #loc27))
